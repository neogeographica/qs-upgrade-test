**** Quakestarter configuration files

The file "_quakestarter_cfg_defaults.cmd" in the "quakestarter_scripts" folder describes some configurable behaviors for Quakestarter, and their default settings.

If you want to change any of these behaviors, create a new file called "_quakestarter_cfg.cmd" in the same folder as the Quakestarter script. (I.e. NOT in the "quakestarter_scripts" folder, but above in your main Quake folder.) In this new file you can set any of the options that you wish to change.

For example, in "_quakestarter_cfg_defaults.cmd" the following line specifies the default Quake engine to use:
    set quake_exe=quakespasm-spiked-win64.exe

Let's say you would rather use vkQuake, and that's the Quake engine that you have installed in your Quake folder instead of Quakespasm-Spiked. To make Quakestarter use vkQuake, you would put this line in your "_quakestarter_cfg.cmd" file:
    set quake_exe=vkQuake.exe

The "_quakestarter_cfg_defaults.cmd" file describes these settings in detail, so most of them don't need extra description here. We'll cover a couple of them below though.


**** Engine choice

As described above, you can set a new quake_exe value to change the Quake program that will be launched by Quakestarter.

You can also add arguments here that should always be used whenever launching your Quake program. For example, if you are launching qbism Super8, its default "heapsize" value is quite low and on modern systems there's no downside to always cranking it up, so that more maps will work correctly. So you could choose to specify this:
    set quake_exe=qbismS8.exe -heapsize 256000

In any case, if you do set your own quake_exe then the following things are _not_ guaranteed:
* that your choice of Quake engine will be able to properly run every selection from the Quakestarter menus
* that your choice of Quake engine will be able to play the downloaded soundtrack files
* that all the settings in the example autoexec.cfg will work for your choice of Quake engine, or have the indicated defaults
* that existing savegames will work for your choice of Quake engine

vkQuake should be a safe alternative choice that avoids all but the last of those issues. And the original Quakespasm engine is also widely compatible, although since the original Quakespasm lacks multigame support (see below) there will be a small number of Quakestarter items that it cannot launch.

Beyond those choices, it's more on your shoulders to look into compatibility issues and be aware that something might go wrong. Even some Quake engine that is a perfectly fine piece of software engineering may have troubles running a particular map release if the map was never tested against that engine, and FWIW most releases are tested against a Quakespasm-family engine. A map may even malfunction in ways that are not immediately apparent if you haven't played it before (e.g. missing monsters, lighting errors).

That said, there are many players who are perfectly happy with their preference for a specialty engine like FTE or DarkPlaces, willing to do a bit of troubleshooting if necessary in order to benefit from unique features that those engines provide. The only inarguable "bad choice" for a Quake engine, when it comes to the purpose of playing custom addons, would be a multiplayer-focussed engine like ezQuake.


**** Multigame support

As mentioned in the "1_mod_folders.txt" doc in the "quakestarter_docs\maps_and_mods" folder, Quakestarter has reasons for installing each addon into its own folder.

For addons that only build on the original Quake campaign content, that's simple enough to deal with. For addons that depend on the official missionpacks, Quake has always supported command-line options for expressing those dependencies (i.e. "-hipnotic" or "-rogue" for missionpack 1 or 2 respectively). And for addons that build on the Quoth mod, modern Quake engines have long supported the "-quoth" argument to express that dependency.

For addons that build on mods other than Quoth... it's not always been quite as easy to represent that situation. Fortunately, modern Quake engines like Quakespasm-Spiked, vkQuake (version 1.05.0 and later), FTE, DarkPlaces, and qbism Super8 support activating a list of mod folders rather than just one, with each folder in the list building on the previous. The "mod_requirements.txt" doc goes into more detail about how this feature is used.

Quakestarter relies on this feature to support installing and launching addons that depend on the Arcane Dimensions or Copper mods. (This doesn't include mods that carry their own copy of the AD or Copper mod; it means simple map releases that are meant to be played with AD or Copper.)

By default Quakestarter will try to automatically figure out whether your Quake engine supports this feature (by looking at the value of quake_exe), and determine what the correct commandline syntax is for invoking it. Hopefully this will work for you! It should work for all of the Quake engines mentioned above or elsewhere in these docs.

But if for some reason this auto-detection is making the wrong choice, you can force the behavior by setting a value for multigame_support in your "_quakestarter_cfg.cmd" file. Possible values are described below.

The default auto-detect behavior (in "_quakestarter_cfg_defaults.cmd") is set like so:
    set multigame_support=auto

To forcibly declare that your Quake engine DOES NOT support multiple mod folders, regardless of what its program name looks like, you can set this value instead, in your in your "_quakestarter_cfg.cmd" file:
    set multigame_support=false

Or to declare that your Quake engine DOES support multiple mod folders, and that it uses the same syntax as Quakespasm-Spiked/vkQuake/FTE/DarkPlaces, you can set this value:
    set multigame_support=true

Finally, you can choose to use the multigame_support value to explicitly define the command-line switches that your Quake engine uses for this feature (omitting the leading dashes). The value should be composed of the switch for the base mod and the switch for the build-on mod, separated by a semicolon. For example if you needed to force the syntax that qbism Super8 uses, you could declare this:
    set multigame_support=game2;game

That last example would result in the following command line for running the "udob_v1_1" release based on Copper:
    my_quake_program.exe -game2 copper_v1_15 -game udob_v1_1 +map start


**** Download behavior

And finally, a consideration that is outside of that configuration file:

Quakestarter will use "curl.exe" to download zipfiles, if that utility is in a directory included in your Windows PATH environment variable. This will be the case in current versions of Windows 10.

If Quakestarter can't find that curl utility, it will use a .Net assembly to do the download instead. This should work fine. One downside though is that this approach will not show a progress bar during the download.

If you don't have "curl.exe" in one of your PATH directories and you really do want that progress bar -- or if for some reason the .Net assembly isn't working and you want to try using curl instead -- then you could install curl yourself. You can get a perfectly good "curl.exe" from https://curl.se/windows/ . Then you can either place that utility into some directory that is already in your PATH, or edit your PATH value to include the directory where you put curl.

(How to edit system environment variables like PATH is outside the scope of this doc, but is well-covered in Google results.)
